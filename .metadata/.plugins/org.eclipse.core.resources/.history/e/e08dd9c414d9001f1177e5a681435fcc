package Application;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Scanner;

import Model.OrderStatus;
import entities.Client;
import entities.OrderItem;
import entities.Product;

public class Program {

	public static void main(String args[], Double productPrice) throws ParseException {
		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
		
		Locale.setDefault(Locale.US);
		Scanner sc = new Scanner(System.in);
		
		/*----Teste 1 feito para ver se tava funcionando o ToString----
		 * 
		//classe produto/ OrderItem posso navegar entre essas classes.
		//Por exemplo. Entra na OrderItem --> a classe produto --> Pegar o Nome.
		//Ou seja, PARA cada OrderItem TEMOS um Produto. = na UML
		Product p = new Product("TV", 1000.0);
		
		OrderItem oi1 = new OrderItem(1,1000.0,p);
		System.out.println(oi1); 
		*/
		
		/* ---teste 2 feito para ver se o toString esta funcionando----
		 
		 @SuppressWarnings("unused")
		Client cli = new Client ( "Maria" , "maria@gmail.com", sdf.parse("20/10/1995"));
		
		 System.out.println(cli);

		*/
		
		System.out.println("Enter Client data: ");
		System.out.print("Name: ");
		String name = sc.nextLine();
		System.out.print("Email: ");
		String email = sc.next();
		System.out.print("Birth date (DD/MM/YYYY): ");
		Date birthDate = sdf.parse(sc.next());
		
		@SuppressWarnings("unused")
		Client client = new Client (name, email, birthDate);
		
		System.out.println( "Enter order data: ");
		System.out.print("Status: ");
		@SuppressWarnings("unused")
		OrderStatus status = OrderStatus.valueOf(sc.next());
		
		System.out.println( "How many to this order? ");
		int N = sc.nextInt();
		for ( int i=1; i<= N; i++) {
			System.out.println("Enter #" + i + " item data: ");
			System.out.print("Product name: ");
			sc.nextLine();
			String productName = sc.nextLine();
			System.out.print("Quantity: ");
			int quantity = sc.nextInt();
			
			Product product = new Product(productName, productPrice);
			
			@SuppressWarnings("unused")
			OrderItem it = new OrderItem(quantity, productPrice, product);
			
			order.addItem(it);
		}
		
		System.out.println();
		System.out.println(order);
		
		
		
		sc.close();
		
	}
}
